### YamlMime:ManagedReference
items:
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest
  commentId: T:TestProject1.ComponentsProgramTest.StoredProgramTest
  id: StoredProgramTest
  parent: TestProject1.ComponentsProgramTest
  children:
  - TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp
  - TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  - TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  - TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound
  - TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands
  - TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  langs:
  - csharp
  - vb
  name: StoredProgramTest
  nameWithType: StoredProgramTest
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest
  type: Class
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: StoredProgramTest
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 12
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  summary: This class contains unit tests for the <xref href="TestProject1.ComponentsProgramTest.StoredProgramTest" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: >-
      [TestClass]

      public class StoredProgramTest
    content.vb: >-
      <TestClass>

      Public Class StoredProgramTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp
  commentId: M:TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp
  id: SetUp
  parent: TestProject1.ComponentsProgramTest.StoredProgramTest
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: StoredProgramTest.SetUp()
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp()
  type: Method
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: SetUp
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 19
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  syntax:
    content: >-
      [TestInitialize]

      public void SetUp()
    content.vb: >-
      <TestInitialize>

      Public Sub SetUp()
  overload: TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound
  commentId: M:TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound
  id: TestGetVariable_ShouldThrowException_WhenVariableNotFound
  parent: TestProject1.ComponentsProgramTest.StoredProgramTest
  langs:
  - csharp
  - vb
  name: TestGetVariable_ShouldThrowException_WhenVariableNotFound()
  nameWithType: StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound()
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound()
  type: Method
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: TestGetVariable_ShouldThrowException_WhenVariableNotFound
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 31
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  summary: Test to ensure the program handles invalid variable retrieval correctly.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(StoredProgramException))]

      public void TestGetVariable_ShouldThrowException_WhenVariableNotFound()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(StoredProgramException))>

      Public Sub TestGetVariable_ShouldThrowException_WhenVariableNotFound()
  overload: TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.StoredProgramException
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  commentId: M:TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  id: TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  parent: TestProject1.ComponentsProgramTest.StoredProgramTest
  langs:
  - csharp
  - vb
  name: TestAddCommand_ShouldAddAndExecuteCommandCorrectly()
  nameWithType: StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly()
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly()
  type: Method
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: TestAddCommand_ShouldAddAndExecuteCommandCorrectly
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 42
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  summary: Test to ensure commands can be added and executed.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void TestAddCommand_ShouldAddAndExecuteCommandCorrectly()
    content.vb: >-
      <TestMethod>

      Public Sub TestAddCommand_ShouldAddAndExecuteCommandCorrectly()
  overload: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands
  commentId: M:TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands
  id: TestRun_ShouldExecuteCommands
  parent: TestProject1.ComponentsProgramTest.StoredProgramTest
  langs:
  - csharp
  - vb
  name: TestRun_ShouldExecuteCommands()
  nameWithType: StoredProgramTest.TestRun_ShouldExecuteCommands()
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands()
  type: Method
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: TestRun_ShouldExecuteCommands
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 58
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  summary: Test to verify that the program executes commands correctly.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void TestRun_ShouldExecuteCommands()
    content.vb: >-
      <TestMethod>

      Public Sub TestRun_ShouldExecuteCommands()
  overload: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  commentId: M:TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  id: TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  parent: TestProject1.ComponentsProgramTest.StoredProgramTest
  langs:
  - csharp
  - vb
  name: TestAddNullCommand_ShouldThrowException_WhenCommandIsNull()
  nameWithType: StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull()
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull()
  type: Method
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 81
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  summary: Test to verify that the program handles empty program inputs correctly.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(StoredProgramException))]

      public void TestAddNullCommand_ShouldThrowException_WhenCommandIsNull()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(StoredProgramException))>

      Public Sub TestAddNullCommand_ShouldThrowException_WhenCommandIsNull()
  overload: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.StoredProgramException
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  commentId: M:TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  id: TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  parent: TestProject1.ComponentsProgramTest.StoredProgramTest
  langs:
  - csharp
  - vb
  name: TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced()
  nameWithType: StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced()
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced()
  type: Method
  source:
    remote:
      path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-AakankshaBhatta.git
    id: TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
    path: TestProject1/ComponentsProgramTest/StoredProgramTest.cs
    startLine: 92
  assemblies:
  - TestProject1
  namespace: TestProject1.ComponentsProgramTest
  summary: Test to verify that an exception is thrown when there are unbalanced conditional commands.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(StoredProgramException))]

      public void TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(StoredProgramException))>

      Public Sub TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced()
  overload: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.StoredProgramException
references:
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest
  commentId: T:TestProject1.ComponentsProgramTest.StoredProgramTest
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html
  name: StoredProgramTest
  nameWithType: StoredProgramTest
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest
- uid: TestProject1.ComponentsProgramTest
  commentId: N:TestProject1.ComponentsProgramTest
  href: TestProject1.html
  name: TestProject1.ComponentsProgramTest
  nameWithType: TestProject1.ComponentsProgramTest
  fullName: TestProject1.ComponentsProgramTest
  spec.csharp:
  - uid: TestProject1
    name: TestProject1
    href: TestProject1.html
  - name: .
  - uid: TestProject1.ComponentsProgramTest
    name: ComponentsProgramTest
    href: TestProject1.ComponentsProgramTest.html
  spec.vb:
  - uid: TestProject1
    name: TestProject1
    href: TestProject1.html
  - name: .
  - uid: TestProject1.ComponentsProgramTest
    name: ComponentsProgramTest
    href: TestProject1.ComponentsProgramTest.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp*
  commentId: Overload:TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html#TestProject1_ComponentsProgramTest_StoredProgramTest_SetUp
  name: SetUp
  nameWithType: StoredProgramTest.SetUp
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.SetUp
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound*
  commentId: Overload:TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html#TestProject1_ComponentsProgramTest_StoredProgramTest_TestGetVariable_ShouldThrowException_WhenVariableNotFound
  name: TestGetVariable_ShouldThrowException_WhenVariableNotFound
  nameWithType: StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestGetVariable_ShouldThrowException_WhenVariableNotFound
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly*
  commentId: Overload:TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html#TestProject1_ComponentsProgramTest_StoredProgramTest_TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  name: TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  nameWithType: StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddCommand_ShouldAddAndExecuteCommandCorrectly
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands*
  commentId: Overload:TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html#TestProject1_ComponentsProgramTest_StoredProgramTest_TestRun_ShouldExecuteCommands
  name: TestRun_ShouldExecuteCommands
  nameWithType: StoredProgramTest.TestRun_ShouldExecuteCommands
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldExecuteCommands
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull*
  commentId: Overload:TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html#TestProject1_ComponentsProgramTest_StoredProgramTest_TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  name: TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  nameWithType: StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestAddNullCommand_ShouldThrowException_WhenCommandIsNull
- uid: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced*
  commentId: Overload:TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  href: TestProject1.ComponentsProgramTest.StoredProgramTest.html#TestProject1_ComponentsProgramTest_StoredProgramTest_TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  name: TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  nameWithType: StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
  fullName: TestProject1.ComponentsProgramTest.StoredProgramTest.TestRun_ShouldThrowException_WhenConditionalCommandsAreUnbalanced
